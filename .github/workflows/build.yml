name: build

on: 
   push:
     paths: [".github/workflows/build.yml"]

jobs:
  build:
    runs-on: windows-latest 

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Chocolatey Action # https://github.com/marketplace/actions/chocolatey-action
      uses: crazy-max/ghaction-chocolatey@v3.0.0  
      with:
         args: install -y xampp-81 python311 ruby git cmake gperf llvm ninja
   
   # - name: Install winget # https://github.com/marketplace/actions/install-winget
   #   uses: Cyberboss/install-winget@v1
    
    - name: Build 
      shell: cmd
      run: |
        rem choco install -y xampp-81 python311 ruby git cmake gperf llvm ninja
        
        rem winget install --scope=machine --id Git.Git Kitware.CMake Ninja-build.Ninja Python.Python.3.11 RubyInstallerTeam.Ruby.3.2 ApacheFriends.Xampp.8.2 LLVM.LLVM
        rem winget install --id GnuWin32.Gperf
        
        python -m pip install pywin32
        git config --global core.autocrlf input
        git clone https://github.com/mi4code/WebKit
        REM use official repo 'git clone https://github.com/WebKit/WebKit --single-branch' source for regular build not my testing one
        cd WebKit


        rem @echo off
        rem cd %~dp0
        
        path C:\xampp\apache\bin;%path%
        path C:\xampp\perl\bin;%path%
        path %ProgramFiles%\CMake\bin;%path%
        path %ProgramFiles(x86)%\Microsoft Visual Studio\Installer;%path%
        for /F "usebackq delims=" %%I in (`vswhere.exe -latest -property installationPath`) do set VSPATH=%%I
        
        rem set WEBKIT_LIBRARIES=%~dp0WebKitLibraries\win
        path %~dp0WebKitLibraries\win\bin;%path%
        set WEBKIT_TESTFONTS=%~dp0Tools\WebKitTestRunner\fonts
        set DUMPRENDERTREE_TEMP=%TEMP%
        
        set CC=clang-cl
        set CXX=clang-cl
        
        rem set http_proxy=http://your-proxy:8080
        rem set https_proxy=%http_proxy%
        
        rem You can pass necessary JSC options https://github.com/WebKit/WebKit/blob/main/Source/JavaScriptCore/runtime/OptionsList.h#L83-L607.
        rem set JSC_dumpOptions=1
        rem set JSC_useJIT=0
        rem set JSC_useDFGJIT=0
        rem set JSC_useRegExpJIT=0
        rem set JSC_useDOMJIT=0
        
        rem You can show check TextureMapper FPS via WEBKIT_SHOW_FPS.
        rem set WEBKIT_SHOW_FPS=1
        
        call "%VSPATH%\VC\Auxiliary\Build\vcvars64.bat"
        rem cd %~dp0
        rem start powershell


        perl Tools/Scripts/build-webkit --release --win -DDEVELOPER_MODE=0 -DENABLE_API_TESTS=0 -DENABLE_LAYOUT_TESTS=0
        

        powershell Compress-Archive ./WebKitBuild/Release/bin ./bins.zip

        
      
    - name: Upload
      uses: actions/upload-artifact@v4.4.0
      with:
        path: WebKit/bins.zip
        name: build
